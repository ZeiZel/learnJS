
//? Какое будет выведено значение: let x = 5; alert( x++ );
let x = 5;
alert( x++ ); // Тут сначала вернётся значение (5), а уже потом оно увеличится

//? Чему равно такое выражение: [ ] + false - null + true ?
//! [] == '' == false
console.log([] + false - null + true) // NaN

//? Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?
let y = 1;
let x = y = 2; // Данная операция выполняется с конца
alert(x); // = 2

//? Чему равна сумма [ ] + 1 + 2?
console.log([ ] + 1 + 2) // [] == '' - будет строка и тут сложатся ''+'1'+'2' = '12'

//? Что выведет этот код: alert( "1"[0] )?
//* К каждому элементу строки можно обратиться по его индексу
alert( "1"[0] ) // Из строки '1' берётся значение под индексом 0

//? Чему равно 2 && 1 && null && 0 && undefined ?
//* Оператор И всегда запинается на лжи. То есть он выведет первое ложное значение, а не true/false
console.log(2 && 1 && null && 0 && undefined) // null

//? Есть ли разница между выражениями? !!( a && b ) и (a && b)?
//* Разницы нет, так как !! (двойное отрицание) возвпращает то же самое значение
console.log(!!( 1 && 2 ) === (1 && 2))

//? Что выведет этот код: alert( null || 2 && 3 || 4 ); ?
//* Оператор ИЛИ всегда запинается на правде
alert( null || 2 && 3 || 4 ); // 3

//? a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?
//* Не равны ровно по той причине, потому что переменные хранят ссылки на разные области памяти
const a = [1, 2, 3], b = [1, 2, 3];
if (a == b) {
    console.log('Да')
} else {
    console.log('Нет')
}

//? Что выведет этот код: alert( +"Infinity" ); ?
//! 4/0 = Infinity
alert( +"Infinity" );

//? Верно ли сравнение: "Ёжик" > "яблоко"?
//* По юникоду нижний регистр идёт дальше верхнего, поэтому число буквы 'я' > 'Ё'
console.log("Ёжик" > "яблоко") // False

//? Чему равно 0 || "" || 2 || undefined || true || falsе ?
//* Опять же ИЛИ споткнулся на первом true
console.log(0 || "" || 2 || undefined || true || falsе) // 2



